Minimum spanning tree algorithm : 

I/p : connected and undirected graph
O/p : subgraph that is a tree and connects all the vertices  ( minimum weight of edges )

How many edges does a minimum spanning tree has?
A minimum spanning tree has (V – 1) edges where V is the number of vertices in the given graph.

Kruskal :
    1. Sort all the edges in non-decreasing order of their weight.
    2. Pick the smallest edge. Check if it forms a cycle with the spanning tree formed so far. 
    If cycle is not formed, include this edge. Else, discard it.
    3. Repeat step#2 until there are (V-1) edges in the spanning tree.

Prim :  
The idea behind Prim’s algorithm is simple, a spanning tree means all vertices must be connected. So 
the two disjoint subsets (discussed above) of vertices must be connected to make a Spanning Tree. And 
they must be connected with the minimum weight edge to make it a Minimum Spanning Tree.

Algorithm
    1) Create a set mstSet that keeps track of vertices already included in MST.
    2) Assign a key value to all vertices in the input graph. Initialize all key values as 
    INFINITE. Assign key value as 0 for the first vertex so that it is picked first.
    3) While mstSet doesn’t include all vertices
        ….a) Pick a vertex u which is not there in mstSet and has minimum key value.
        ….b) Include u to mstSet.
        ….c) Update key value of all adjacent vertices of u. To update the key values, iterate through all adjacent vertices. For every adjacent vertex v, if weight of edge u-v is less than the previous key value of v, update the key value as weight of u-v
